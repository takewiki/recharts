% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/options.R
\name{aesStyle}
\alias{aesStyle}
\alias{areaStyle}
\alias{chordStyle}
\alias{itemStyle}
\alias{labelLineStyle}
\alias{labelStyle}
\alias{lineStyle}
\alias{linkStyle}
\alias{nodeStyle}
\alias{textStyle}
\title{Define Aesthetic Elements of Echarts Object}
\usage{
aesStyle(element = c("text", "line", "area", "chord", "node", "link"), ...)

lineStyle(...)

textStyle(...)

areaStyle(...)

chordStyle(...)

nodeStyle(...)

linkStyle(...)

labelStyle(...)

labelLineStyle(...)

itemStyle(...)
}
\arguments{
\item{element}{String, could be 'text', 'line', 'area', 'chord', 'node', or 'link',
corresponding to \code{textStyle, lineStyle, areaStyle, chordStyle, nodeStyle,
linkStyle}}

\item{...}{The params to form an aesthetic element \cr
The element-specific params list:
\describe{
 \item{\strong{itemStyle} (normal|emphasis)}{
   \tabular{ll}{
     \code{color} \tab color vector, 'rgba', hex color, or color names. \cr
     \code{lineStyle} \tab for line, k charts and markLine, \code{\link{lineStyle}} \cr
     \code{textStyle} \tab \code{\link{textStyle}} \cr
     \code{areaStyle} \tab for stacked line chart and map, \code{\link{areaStyle}} \cr
     \code{chordStyle} \tab for chord chart, \code{\link{chordStyle}} \cr
     \code{nodeStyle} \tab for force chart, \code{\link{nodeStyle}} \cr
     \code{linkStyle} \tab for force chart, \code{\link{linkStyle}} \cr
     \code{borderColor} \tab color vector, 'rgba', hex color, or color names. \cr
     \code{borderWidth} \tab for symbol, symbole, pie chart, map and markPoint, numeric \cr
     \code{barBorderColor} \tab for symbol, symbole, pie chart, map and markPoint, numeric \cr
     \code{barBorderRadius} \tab numeric vector length 1 or 4 (right-bottom-left-top), default 0 \cr
     \code{barBorderWidth} \tab numeric vector length 1 or 4 (right-bottom-left-top), default 00 \cr
     \code{label} \tab for line, bar, k, scatter, pie, map, force, funnel charts
      and markPoint, markLine, \code{\link{labelStyle}} \cr
     \code{labelLine} \tab for pie and funnel chart, \code{\link{labelLineStyle}}
     }}
 \item{\emph{label}}{
   \tabular{ll}{
     \code{show} \tab TRUE|FALSE, default TRUE \cr
     \code{position} \tab \itemize{
       \item for pie, 'outer'|'inner'; \cr
       \item for funnel, 'inner'|'left'|'right'; \cr
       \item for line, bar, k, scatter, 'top'|'right'|'inside'|'left'|'bottom'; \cr
       \item for bar, additionally 'insideLeft' | 'insideRight' | 'insideTop' | 'insideBottom'} \cr
     \code{rotate} \tab chord chart only. TRUE|FALSE, default FALSE \cr
     \code{distance} \tab chord and pie chart only. numeric, default 10 \cr
     \code{formatter} \tab \code{\link{setTooltip}} \cr
     \code{textStyle} \tab \code{\link{textStyle}} \cr
     \code{x} \tab treemap only, numeric \cr
     \code{y} \tab treemap only, numeric
     }}
 \item{\emph{labelLine}}{
   \tabular{ll}{
     \code{show} \tab TRUE|FALSE, default TRUE \cr
     \code{length} \tab numeric or 'auto', default 40 \cr
     \code{lineStyle} \tab \code{\link{lineStyle}}
     }}
 \item{textStyle}{
   \tabular{ll}{
     \code{color} \tab color vector, 'rgba', hex color, or color names.  \cr
     \code{decoration} \tab only for tooltip. string, default 'none' \cr
     \code{align} \tab 'left' | 'right' | 'center' \cr
     \code{baseline} \tab 'top' | 'bottom' | 'middle' \cr
     \code{fontFamily} \tab valid font family name \cr
     \code{fontSize} \tab numeric, default 12 \cr
     \code{fontStyle} \tab 'normal' | 'italic' | 'oblique', default 'normal' \cr
     \code{fontWeight} \tab 'normal' | 'bold' | 'bolder' | 'lighter' or numeric,
     default 'normal'
     }}
 \item{lineStyle}{
   \tabular{ll}{
     \code{color} \tab color vector, 'rgba', hex color, or color names. \cr
     \code{type} \tab 'solid' | 'dotted' | 'dashed', for tree, additionally
     'curve' | 'broken'. Default 'solid' \cr
     \code{width} \tab numeric \cr
     \code{shadowColor} \tab color vector, 'rgba', hex color, or color names. \cr
     \code{shadowBlur} \tab numeric, default 5 \cr
     \code{shadowOffsetX} \tab numeric, default 3 \cr
     \code{shadowOffsetY} \tab numeric, default 3
     }}
 \item{areaStyle}{
   \tabular{ll}{
     \code{color} \tab color vector, 'rgba', hex color, or color names. \cr
     \code{type} \tab only 'default'
     }}
 \item{chordStyle}{
   \tabular{ll}{
     \code{width} \tab numeric, default 1 \cr
     \code{color} \tab color vector, 'rgba', hex color, or color names. \cr
     \code{borderWidth} \tab numeric, default 1 \cr
     \code{borderColor} \tab color vector, 'rgba', hex color, or color names.
     }}
 \item{nodeStyle}{
   \tabular{ll}{
     \code{color} \tab color vector, 'rgba', hex color, or color names. \cr
     \code{borderWidth} \tab numeric, default 1 \cr
     \code{borderColor} \tab color vector, 'rgba', hex color, or color names.
     }}
 \item{linkStyle}{
   \tabular{ll}{
     \code{type} \tab 'curve'|'line' \cr
     \code{color} \tab color vector, 'rgba', hex color, or color names. default '#5182ab' \cr
     \code{width} \tab numeric, default 1
     }}
}}
}
\value{
A list
}
\description{
An Echarts object uses \code{itemStyle} heavily. You can use \code{itemStyle}
to compose an itemStyle list. \cr \cr
Contained in an itemStyle object are \cr
\describe{
  \item{atomic features}{'color', 'borderColor', 'borderWidth', 'barBorderColor',
  'barBorderRadius', 'barBorderWidth', which you can directly assign values}
  \item{object features}{'lineStyle', 'textStyle','areaStyle', 'chordStyle',
  'nodeStyle', 'linkStyle', which you can yield by \code{aesStyle} function family}
  \item{mixed object features}{'label' and 'labelLine', which contains other
  object features, such as 'lineStyle', 'textStyle'}
} \cr
 You can use \code{aesStyle} function family (\code{
 lineStyle, textStyle, areaStyle, aesChordSytle, labelStyle, labelLineStyle})
 to compose basic feature objects, and then group them into label or labelLine
 using \code{labelStyle / labelLineStyle}, and finally pack them into an itemStyle
 object using \code{itemStyle}.
}
\examples{
\dontrun{
lab <- labelStyle(show=TRUE, position='inside',
                textStyle=textStyle(color='red'))
styLine <- lineStyle(color='#fff', width=4, shadowBlur=5)
itemStyle <- list(normal=itemStyle(lineStyle=styLine, label=lab),
                  emphasis=itemStyle(lineStyle=styLine, label=lab)
              )
}
}

